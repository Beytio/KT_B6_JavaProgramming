Review
    Constructor : A special Method
            No return type

            Class Car{
            String brand;
            String model;


            public Car(){
            }


            public Car(String brand){
                this.brand=brand;
            }

        this. --->to call şnstance variables or instance method
        this()  ----> to call a constructor

            Constructor Call
                1. Constructor cannot be called by its name, this() need to be used
                2. Only constructor call a constructor
                3. Constructor must be called first, should be on the first step
                4. Constructor cannot call more than one constructor
                5. Constructor cannot call itself



        OOP: Object Oriented Programming (pillars of Java)

                1. Encapsulation-- kapsülleme, data hiding
                2. Inheritance -- kalıtım, parent-child
                3. Abstraction
                4. Polymorphism

        1. Encapsulation
            Access Modifiers:
                public          : Always accesible at any where
                protected       : Always visible within same package. Accesible outside to sub class only.
                default         : Always visibke within same package. Not accesible from outside package.
                private         : visible within same CLASS


                Encapsulation   : Hiding Data buy giving private access modifiers
                                   use public getter & setter methods to read and write the data
                                   TO HAVE COMPLETE CONTROL OF DATA


                getter          : read Only, public instance method
                                  has a return tyoe (same datatype with instance variable)
                                  has no parameter


                setter          : write only, public instance method
                                  return type is void
                                  has parameter ( same datatype with instance variable)




